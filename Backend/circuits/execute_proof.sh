#!/bin/bash
set -e # Exit on first error

# --- Script Arguments ---
INPUT_JSON_PATH="$1"    # Path to the input.json generated by Node.js
WORK_DIR="$2"           # Path to the unique temporary working directory for this request

# --- Configuration: Paths to Pre-Generated Files in 'build/' ---
SCRIPT_DIR=$(dirname "$0")
BUILD_DIR="${SCRIPT_DIR}/build" # Assumes 'build' dir is sibling to this script
CIRCUIT_NAME="fingerprint_matcher" # Base name matching your files

# --- !!!! IMPORTANT !!!! ---
# --- Update this ZKey filename to match the ACTUAL file created by run_full_setup.sh ---
ZKEY_FILENAME="fingerprint_matcher_0001.zkey" # e.g., fingerprint_matcher_0001.zkey OR fingerprint_matcher_final.zkey
# --- !!!! IMPORTANT !!!! ---

WASM_PATH="${BUILD_DIR}/${CIRCUIT_NAME}_js/${CIRCUIT_NAME}.wasm"
NODE_WITNESS_GEN="${BUILD_DIR}/${CIRCUIT_NAME}_js/generate_witness.js"
ZKEY_FINAL_PATH="${BUILD_DIR}/${ZKEY_FILENAME}" # Use the variable here
VERIFICATION_KEY_PATH="${BUILD_DIR}/verification_key.json"

# --- Output Paths (inside the unique work directory) ---
WITNESS_PATH="${WORK_DIR}/witness.wtns"
PROOF_PATH="${WORK_DIR}/proof.json"
PUBLIC_JSON_PATH="${WORK_DIR}/public.json"

# --- Input Validation ---
# Check args
if [ -z "$INPUT_JSON_PATH" ] || [ -z "$WORK_DIR" ]; then
  echo "[SCRIPT ERROR] Usage: $0 <input.json path> <work directory path>" >&2
  exit 1
fi
# Check files/dirs exist
if [ ! -f "$INPUT_JSON_PATH" ]; then echo "[SCRIPT ERROR] Input JSON not found: $INPUT_JSON_PATH" >&2; exit 1; fi
if [ ! -d "$WORK_DIR" ]; then echo "[SCRIPT ERROR] Work directory not found: $WORK_DIR" >&2; exit 1; fi
if [ ! -f "$WASM_PATH" ]; then echo "[SCRIPT ERROR] WASM file not found: $WASM_PATH" >&2; exit 1; fi
if [ ! -f "$NODE_WITNESS_GEN" ]; then echo "[SCRIPT ERROR] Witness generator script not found: $NODE_WITNESS_GEN" >&2; exit 1; fi
if [ ! -f "$ZKEY_FINAL_PATH" ]; then echo "[SCRIPT ERROR] Final ZKey not found: $ZKEY_FINAL_PATH" >&2; exit 1; fi
if [ ! -f "$VERIFICATION_KEY_PATH" ]; then echo "[SCRIPT ERROR] Verification key not found: $VERIFICATION_KEY_PATH" >&2; exit 1; fi

echo "[SCRIPT INFO] Work Directory: ${WORK_DIR}"
echo "[SCRIPT INFO] Input JSON: ${INPUT_JSON_PATH}"

# --- Step 1: Generate Witness ---
echo "[SCRIPT] Generating witness..."
if ! node "$NODE_WITNESS_GEN" "$WASM_PATH" "$INPUT_JSON_PATH" "$WITNESS_PATH"; then
    echo "[SCRIPT ERROR] Witness generation failed." >&2
    exit 1 # Exit if witness generation fails
fi
echo "[SCRIPT] Witness generated: $WITNESS_PATH"

# --- Step 2: Generate Proof ---
echo "[SCRIPT] Generating proof..."
if ! snarkjs groth16 prove "$ZKEY_FINAL_PATH" "$WITNESS_PATH" "$PROOF_PATH" "$PUBLIC_JSON_PATH"; then
    echo "[SCRIPT ERROR] Proof generation failed." >&2
    exit 1 # Exit if proof generation fails
fi
echo "[SCRIPT] Proof generated: $PROOF_PATH"
echo "[SCRIPT] Public signals: $PUBLIC_JSON_PATH"

# --- Step 3: Verify Proof ---
echo "[SCRIPT] Verifying proof..."
if ! snarkjs groth16 verify "$VERIFICATION_KEY_PATH" "$PUBLIC_JSON_PATH" "$PROOF_PATH"; then
    echo "[SCRIPT ERROR] Verification failed." >&2
    exit 1 # Exit if verification fails (snarkjs exits non-zero anyway, but good practice)
fi

# If snarkjs verify succeeded, it printed OK! and exited 0.
echo "[SCRIPT] Verification reported OK by snarkjs. Script finished successfully."
exit 0 # Explicit success exit
